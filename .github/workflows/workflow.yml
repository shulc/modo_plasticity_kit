name: Build kit

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_C_COMPILER=clang
        -DCMAKE_BUILD_TYPE=Release
        -S ${{ github.workspace }}
    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
    - name: Upload build
      uses: actions/upload-artifact@master
      with:
        name: linux
        path: ${{ steps.strings.outputs.build-output-dir }}/libplasticity_kit.so

  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_C_COMPILER=clang
        -DCMAKE_BUILD_TYPE=Release
        -S ${{ github.workspace }}
    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
    - name: Upload build
      uses: actions/upload-artifact@master
      with:
        name: mac
        path: ${{ steps.strings.outputs.build-output-dir }}/libplasticity_kit.dylib

  build-win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=cl
        -DCMAKE_C_COMPILER=cl
        -DCMAKE_BUILD_TYPE=Release
        -S ${{ github.workspace }}
    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
    - name: Upload build
      uses: actions/upload-artifact@master
      with:
        name: win
        path: ${{ steps.strings.outputs.build-output-dir }}\Release\plasticity_kit.dll

  build-kit:
    runs-on: ubuntu-latest
    needs: [build-linux,build-mac,build-win]
    steps:
    - uses: actions/checkout@v1
    - name: Download linux artifact
      uses: actions/download-artifact@master
      with:
        name: linux
          
    - name: Download mac artifact
      uses: actions/download-artifact@master
      with:
        name: mac
        
    - name: Download win artifact
      uses: actions/download-artifact@master
      with:
        name: win

    - name: Checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          kit_files

    - name: Build kit
      run: |
        pwd
        ls -l
        mkdir -p out/Plasticity/Win
        mkdir -p out/Plasticity/Mac
        mkdir -p out/Plasticity/Linux
        cp -r kit_files/* out/Plasticity/
        cp plasticity_kit.dll out/Plasticity/Win/
        cp libplasticity_kit.dylib out/Plasticity/Mac/
        cp libplasticity_kit.so out/Plasticity/Linux/

    - name: Upload kit
      uses: actions/upload-artifact@master
      with:
        name: kit
        path: out